name: CI/CD pipeline - DemoBlaze Automation Test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: '23'
          distribution: 'zulu'

        # This step caches Maven dependencies to prevent downloading them every time the workflow runs.
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2-

      - name: Debug Drivers Path
        run: |
          ls -l src/test/resources/Drivers/linux/

      - name: Make Drivers Executable (Linux)
        if: runner.os == 'Linux'
        run: |
          chmod +x src/test/resources/Drivers/linux/chromedriver
          chmod +x src/test/resources/Drivers/linux/msedgedriver

      - name: Install dependencies using Maven
        run: mvn clean install

      - name: Set up Chrome Headless
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo 'CHROME_BIN=/usr/bin/google-chrome' >> $GITHUB_ENV

      - name: Set up Edge Headless
        run: |
          sudo apt-get update
          wget https://packages.microsoft.com/repos/edge/pool/main/m/microsoft-edge-stable/microsoft-edge-stable_133.0.3065.82-1_amd64.deb
          sudo apt install -y ./microsoft-edge-stable_133.0.3065.82-1_amd64.deb
          echo 'EDGE_BIN=/usr/bin/microsoft-edge' >> $GITHUB_ENV

      - name: Run Chrome Tests
        run: mvn test -Dbrowser=chrome

      - name: Run Edge Tests
        run: mvn test -Dbrowser=edge

      # this generates Surefire report/XML reports in the target directory (path)
      - name: Publish Test Report (Surefire)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: surefire-reports
          path: target/surefire-reports

      # This uploads the entire logs directory as an artifact to the GitHub Actions run and upload it to the Log path.
      - name: Publish Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-logs
          path: logs
